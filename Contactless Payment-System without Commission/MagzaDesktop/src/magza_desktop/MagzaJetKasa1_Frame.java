/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package magza_desktop;

import Beans.UrunBeans;
import com.fazecast.jSerialComm.SerialPort;
import com.fazecast.jSerialComm.SerialPortDataListener;
import com.fazecast.jSerialComm.SerialPortEvent;
import java.awt.Image;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author furka
 */
public class MagzaJetKasa1_Frame extends javax.swing.JFrame {

    dbConn db_conn = new dbConn();
    Connection con = null;
    String PersonelId = null, PersonelIsım = null, PersonelSoyisim = null, SecilenKasa = null;
    byte [] UrunImage = null;
    ArrayList<UrunBeans> barcodes = new ArrayList<>();
    double HesapGoster = 0;
    public MagzaJetKasa1_Frame() {
        initComponents();
    }

    public MagzaJetKasa1_Frame(String PersonelId, String PersonelIsım, String PersonelSoyisim, String SecilenKasa) {
        initComponents();
        this.PersonelId = PersonelId;
        this.PersonelIsım = PersonelIsım;
        this.PersonelSoyisim = PersonelSoyisim;
        this.SecilenKasa = SecilenKasa;
        
        con = db_conn.getConnection_Magza_DB();
        //Kasa açıldığındabarkod için barkod cihazını dinlemeyet açıyorum
        initializeSerialPort();

    }
    //ÖDEME SAYFASINDAN DÖNÜŞ İÇİN GEREKİYOR

    public MagzaJetKasa1_Frame(ArrayList<UrunBeans> Liste, String PersonelId, String PersonelIsım, String PersonelSoyisim, String SecilenKasa, double HesapGoster) {
        initComponents();
        this.PersonelId = PersonelId;
        this.PersonelIsım = PersonelIsım;
        this.PersonelSoyisim = PersonelSoyisim;
        this.SecilenKasa = SecilenKasa;
        this.barcodes = Liste;
        con = db_conn.getConnection_Magza_DB();
        this.HesapGoster = HesapGoster;
        //MagzaJetKasa2 ' den dönüşte tekrar tabloya ürünleri girebilemk için kullanıyorum
        Show_Urun_Bean_List_Geri_Icin();
        //Kasa açıldığındabarkod için barkod cihazını dinlemeyet açıyorum
        initializeSerialPort();
        
        String tmpHesapGoster = String.valueOf(HesapGoster);
        OdenecekTutarMiktarı_jLabel.setText(tmpHesapGoster);
        System.out.println(SecilenKasa);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Alinanlar_Table = new javax.swing.JTable();
        Urun_Cıkar_Button = new javax.swing.JButton();
        Odeme_Button = new javax.swing.JButton();
        Temizle_Button = new javax.swing.JButton();
        Ses_Durum_jCheckBox = new javax.swing.JCheckBox();
        SecilenImage_jLabel = new javax.swing.JLabel();
        OdenecekTutarMiktarı_jLabel = new javax.swing.JLabel();
        MecvutPara_jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        KasaKapat_jMenuItem = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Alinanlar_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barkod", "İsim", "Fiyat", "Durum"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Alinanlar_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Alinanlar_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Alinanlar_Table);

        Urun_Cıkar_Button.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Urun_Cıkar_Button.setText("URUN ÇIKAR");
        Urun_Cıkar_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Urun_Cıkar_ButtonActionPerformed(evt);
            }
        });

        Odeme_Button.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Odeme_Button.setText("ÖDEMEYE GEÇ");
        Odeme_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Odeme_ButtonActionPerformed(evt);
            }
        });

        Temizle_Button.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Temizle_Button.setText("TEMİZLE");
        Temizle_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Temizle_ButtonActionPerformed(evt);
            }
        });

        Ses_Durum_jCheckBox.setText("SES DESTEK");

        OdenecekTutarMiktarı_jLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        MecvutPara_jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MecvutPara_jLabel1.setText("Ödenecek Tutar Miktarı");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(SecilenImage_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Temizle_Button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Odeme_Button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Urun_Cıkar_Button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(MecvutPara_jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OdenecekTutarMiktarı_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(41, 41, 41)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(Ses_Durum_jCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(Ses_Durum_jCheckBox)
                .addGap(27, 27, 27)
                .addComponent(SecilenImage_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Urun_Cıkar_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Temizle_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Odeme_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(OdenecekTutarMiktarı_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MecvutPara_jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        KasaKapat_jMenuItem.setText("Kasa Kapat");
        KasaKapat_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KasaKapat_jMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(KasaKapat_jMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Urun_Cıkar_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Urun_Cıkar_ButtonActionPerformed

        //tablodan bir stun seçilmiş ise kullanılır
        if (Alinanlar_Table.getSelectedRow() != -1) {
            
            int secilen = Alinanlar_Table.getSelectedRow();
            
            double tmpfiyat = Double.valueOf(barcodes.get(secilen).getUrun_Fiyat());
            HesapGoster -= tmpfiyat;
            String tmpHesapGoster = String.valueOf(HesapGoster);
            OdenecekTutarMiktarı_jLabel.setText(tmpHesapGoster);
            
            barcodes.remove(secilen);
            ((DefaultTableModel) Alinanlar_Table.getModel()).removeRow(secilen);
            
        } else {
            if (Ses_Durum_jCheckBox.isSelected()) {
                //io.Ses_Modul("C:\\Users\\MFİ\\Documents\\NetBeansProjects\\bitirmeProje\\src\\wav\\cıkarmak_istenen_urunu_sec.wav");
            }
            JOptionPane.showMessageDialog(null, "Lütfen Tabloda Çıkarmak İstediğiniz Satırı Seçin");
        }
    }//GEN-LAST:event_Urun_Cıkar_ButtonActionPerformed

    private void Odeme_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Odeme_ButtonActionPerformed

        if (!barcodes.isEmpty()) {
            MagzaJetKasa2_Frame msg = new MagzaJetKasa2_Frame(barcodes, PersonelId, PersonelIsım, PersonelSoyisim, SecilenKasa, HesapGoster);

            //ödeme sayfasına geçerken portu dinlemeye devam edersem sayfaya geldiğimde yeniden çalıştırılmaya çalışacak ve hata alacaktım
            //ödeme sayfasına gönderirken portu kapatarak gönderiyorum döndüğümde ise kurucu metotta geri açıyorum
            try {
                closePort();
            } catch (Exception ex) {
                Logger.getLogger(MagzaJetKasa1_Frame.class.getName()).log(Level.SEVERE, null, ex);
            }

            setVisible(false);
            msg.setVisible(true);
        } else {
            if (Ses_Durum_jCheckBox.isSelected()) {
                // io.Ses_Modul("C:\\Users\\MFİ\\Documents\\NetBeansProjects\\bitirmeProje\\src\\wav\\once_urunu_okutunuz.wav");
            }
            JOptionPane.showMessageDialog(null, "Lütfen Önce Ürün Okutunuz");
        }
    }//GEN-LAST:event_Odeme_ButtonActionPerformed

    private void Temizle_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Temizle_ButtonActionPerformed

        while (!barcodes.isEmpty()) {
            ((DefaultTableModel) Alinanlar_Table.getModel()).removeRow(0);
            barcodes.remove(0);

        }
        HesapGoster = 0;
        String tmpHesapGoster = String.valueOf(HesapGoster);
        OdenecekTutarMiktarı_jLabel.setText(tmpHesapGoster);
    }//GEN-LAST:event_Temizle_ButtonActionPerformed

    private void KasaKapat_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KasaKapat_jMenuItemActionPerformed

        try {
            closePort();
        } catch (Exception ex) {
            Logger.getLogger(MagzaJetKasa1_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        YetkiliKontrol_Frame ykf = new YetkiliKontrol_Frame(PersonelId, PersonelIsım, PersonelSoyisim, SecilenKasa);
        setVisible(false);
        ykf.setVisible(true);

    }//GEN-LAST:event_KasaKapat_jMenuItemActionPerformed

    private void Alinanlar_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Alinanlar_TableMouseClicked
       
        if (Alinanlar_Table.getSelectedRow() != -1) {
            int secilen = Alinanlar_Table.getSelectedRow();
            UrunImage = barcodes.get(secilen).getImage();
            ImageIcon ImgIcon = new ImageIcon(new ImageIcon(UrunImage).getImage().getScaledInstance(SecilenImage_jLabel.getWidth(), SecilenImage_jLabel.getHeight(), Image.SCALE_SMOOTH));
             SecilenImage_jLabel.setIcon(ImgIcon);
        }
    }//GEN-LAST:event_Alinanlar_TableMouseClicked

    // BURASI ÜRÜNÜ BARKODU OKUTUP LİSTEYE EKLEDİĞİ KISMI--------------------------------------------------
    // burasıyla barkodları hızlıca okuyacağım
    String okunan;
    SerialPort serialPort;
    String conPort = "COM4";
    int baudrate = 115200;

    public void closePort() throws Exception {
        if (serialPort != null) {
            serialPort.removeDataListener();
            serialPort.closePort();
        }
    }

    void initializeSerialPort() {

        serialPort = SerialPort.getCommPort(conPort);
        serialPort.openPort();
        serialPort.setBaudRate(baudrate);
        serialPort.addDataListener(new SerialPortDataListener() {
            @Override
            public int getListeningEvents() {
                return SerialPort.LISTENING_EVENT_DATA_AVAILABLE;
            }

            @Override
            public void serialEvent(SerialPortEvent event) {
                //mevcut bir olay olup olmadığını kontrol ediyorum
                if (event.getEventType() != SerialPort.LISTENING_EVENT_DATA_AVAILABLE) {
                    return;
                }
                //bir olay tetiklendiyse çalışacak
                //veri boyutunda byte dizisi oluşturuyorum
                byte[] newData = new byte[serialPort.bytesAvailable()];

                //readbytes ile verileri okuyarak diziye atiyorum aynı zamanda okunan verilerin boyutunu kaydediyorum(numread)
                int numRead = serialPort.readBytes(newData, newData.length);

                if (numRead > 0) {
                    for (int i = 0; i < newData.length; ++i) {
                        //burasıyla boş karakterleri trim metoduyla kaldırıyorum
                        if ((char) newData[i] == '\n' || (char) newData[i] == '\r') {
                            okunan = okunan.trim();
                            if (okunan.length() > 0) {
                                Okunan_Deger_Isle(okunan);
                            }
                            //okunan verileri ayırt edebimek için okuma bitiminde 
                            //barkod değişkenini temizliyorum ki sonraki veri önceki verinin üzerine eklenmesin
                            okunan = "";
                        } //boşluk dışındaki karakterleri okunan değişkeinde depoluyorum
                        else {
                            okunan = okunan + (char) newData[i];
                        }
                    }
                }
            }
        });
    }

    public void Okunan_Deger_Isle(String Urun_Barkod) {
        //okunan barkod numarasında harf varsa temizleyerek işlem yapıyorum
        if (Character.isLetter(Urun_Barkod.charAt(0))) {
            Urun_Barkod = duzenle(Urun_Barkod);
        }
        if (Urun_Barkod != null) {
            //çalışacak metotlar gelecek
            Veritabanında_Bul(Urun_Barkod);
            System.out.println("Received: " + Urun_Barkod);
        }
    }

    //ilk okunan barkodun başındaki null yazısını kaldırmak için
    public String duzenle(String Urun_Barkod) {
        String result = "";
        for (int i = 0; i < Urun_Barkod.length(); i++) {
            if (!Character.isLetter(Urun_Barkod.charAt(i))) {
                result += Urun_Barkod.charAt(i);
            }
        }

        return result;
    }
    //OKUULAN DEĞERLERİ VERİ TABANINDAN ÇEKEREK TABLOYA YAZMAK İÇİN KULLANILIYOR

    public void Veritabanında_Bul(String barcode) {

        String U_Barkod, U_Marka, U_Isim, U_Durum, U_Stok, U_Fiyat, query;
        byte [] UrunImage = null;
        UrunBeans ub;

        try {
            
            Statement st = con.createStatement();
            query = "SELECT * FROM Urun_Table WHERE Urun_Barkod ='"+barcode+"'";
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                U_Barkod = rs.getString("Urun_Barkod");
                U_Marka = rs.getString("Urun_Marka");
                U_Isim = rs.getString("Urun_Isim");
                U_Stok = rs.getString("Urun_Stok");
                U_Durum = rs.getString("Urun_Durum");
                U_Fiyat = rs.getString("Urun_Fiyat");
                UrunImage = rs.getBytes("Urun_Gorsel");
                
                if (!U_Barkod.equals("") && !U_Stok.equals("0")) {
                    
                    ImageIcon ImgIcon = new ImageIcon(new ImageIcon(UrunImage).getImage().getScaledInstance(SecilenImage_jLabel.getWidth(), SecilenImage_jLabel.getHeight(), Image.SCALE_SMOOTH));
                    SecilenImage_jLabel.setIcon(ImgIcon);
                    
                    ub = new UrunBeans(U_Barkod, U_Marka, U_Isim, U_Stok, U_Durum, U_Fiyat, UrunImage);
                    barcodes.add(ub);
                    Show_Urun_Bean_List(ub);
                    
                }
                if (U_Stok.equals("0")) {
                    JOptionPane.showMessageDialog(null, "Ürünümüz Stokta Bulunmamaktadır");
                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }

    public void Show_Urun_Bean_List(UrunBeans ul) {

        DefaultTableModel model = (DefaultTableModel) Alinanlar_Table.getModel();
        Object[] row = new Object[4];

        row[0] = ul.getUrun_Barkod();
        row[1] = ul.getUrun_Marka();
        row[2] = ul.getUrun_Isim();
        row[3] = ul.getUrun_Fiyat();
        model.addRow(row);
        
        double tmpfiyat = Double.valueOf(ul.getUrun_Fiyat());
        HesapGoster += tmpfiyat;
        String tmpHesapGoster = String.valueOf(HesapGoster);
        OdenecekTutarMiktarı_jLabel.setText(tmpHesapGoster);
    }
    
    //MagzaJetKasa2 ' den dönünce table'ı tekrar yazdırmak için
     public void Show_Urun_Bean_List_Geri_Icin() {

        DefaultTableModel model = (DefaultTableModel) Alinanlar_Table.getModel();

        Object[] row = new Object[4];
        //kolon sayısını belirledim

        for (int i = 0; i < barcodes.size(); i++) {
            row[0] = barcodes.get(i).getUrun_Barkod();
            row[1] = barcodes.get(i).getUrun_Marka();
            row[2] = barcodes.get(i).getUrun_Isim();
            row[3] = barcodes.get(i).getUrun_Isim();
            model.addRow(row);
        }
    }

    //---------------------------------------------------------------------------------------------
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MagzaJetKasa1_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MagzaJetKasa1_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MagzaJetKasa1_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MagzaJetKasa1_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MagzaJetKasa1_Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Alinanlar_Table;
    private javax.swing.JMenuItem KasaKapat_jMenuItem;
    private javax.swing.JLabel MecvutPara_jLabel1;
    private javax.swing.JButton Odeme_Button;
    private javax.swing.JLabel OdenecekTutarMiktarı_jLabel;
    private javax.swing.JLabel SecilenImage_jLabel;
    private javax.swing.JCheckBox Ses_Durum_jCheckBox;
    private javax.swing.JButton Temizle_Button;
    private javax.swing.JButton Urun_Cıkar_Button;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
