/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package magza_desktop;

import Beans.MusteriBeans;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author furka
 */
public class PersonelMusteriKartKayıt_Frame extends javax.swing.JFrame {

    String PersonelId = null, PersonelIsım = null, PersonelSoyisim = null;
    dbConn DB_Con = new dbConn();
    Connection con = null;
    Detecter dt = new Detecter();
    ArrayList<MusteriBeans> MusteriSorguList = new ArrayList<>();

    public PersonelMusteriKartKayıt_Frame() {
        initComponents();
    }

    public PersonelMusteriKartKayıt_Frame(String PersonelId, String PersonelIsım, String PersonelSoyisim) {
        initComponents();
        this.PersonelId = PersonelId;
        this.PersonelIsım = PersonelIsım;
        this.PersonelSoyisim = PersonelSoyisim;
        con = DB_Con.getConnection_Magza_DB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        KatrOnayBekleyen_Table = new javax.swing.JTable();
        MusteriNo_Textfield = new javax.swing.JTextField();
        MusteriId_Textfield = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        IdSorgu_Button = new javax.swing.JButton();
        NoSorgu_Button = new javax.swing.JButton();
        KartKayırSayfasi_jButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        AnaSayfa_jMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        KatrOnayBekleyen_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Muşteri Id", "Müşteri İsim", "Müşteri Soyisim", "Müşteri Telefon"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(KatrOnayBekleyen_Table);
        if (KatrOnayBekleyen_Table.getColumnModel().getColumnCount() > 0) {
            KatrOnayBekleyen_Table.getColumnModel().getColumn(0).setHeaderValue("Muşteri Id");
            KatrOnayBekleyen_Table.getColumnModel().getColumn(1).setHeaderValue("Müşteri İsim");
            KatrOnayBekleyen_Table.getColumnModel().getColumn(2).setHeaderValue("Müşteri Soyisim");
            KatrOnayBekleyen_Table.getColumnModel().getColumn(3).setHeaderValue("Müşteri Telefon");
        }

        MusteriNo_Textfield.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        MusteriId_Textfield.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setText("Müşteri No");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel21.setText("Müşteri Id");

        IdSorgu_Button.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        IdSorgu_Button.setText("BUL");
        IdSorgu_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdSorgu_ButtonActionPerformed(evt);
            }
        });

        NoSorgu_Button.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        NoSorgu_Button.setText("BUL");
        NoSorgu_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoSorgu_ButtonActionPerformed(evt);
            }
        });

        KartKayırSayfasi_jButton.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        KartKayırSayfasi_jButton.setText("KART KAYIT");
        KartKayırSayfasi_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KartKayırSayfasi_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(MusteriId_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(IdSorgu_Button)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel20)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(MusteriNo_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(NoSorgu_Button))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 814, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(KartKayırSayfasi_jButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MusteriNo_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NoSorgu_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MusteriId_Textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IdSorgu_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(KartKayırSayfasi_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Seçenekler");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        AnaSayfa_jMenuItem.setText("Ana Sayfa");
        AnaSayfa_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnaSayfa_jMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(AnaSayfa_jMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IdSorgu_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdSorgu_ButtonActionPerformed
        TableTemizle();
        String MusteriId = MusteriId_Textfield.getText();
        if (dt.Sayi_Mi(MusteriId) && !MusteriId.equals("")) {
            MusteriIdSorgu(MusteriId);
        } else {
            JOptionPane.showMessageDialog(null, "Lütfen geçerli değerler girin");
        }
    }//GEN-LAST:event_IdSorgu_ButtonActionPerformed

    private void NoSorgu_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoSorgu_ButtonActionPerformed
        TableTemizle();
        String MusteriNo = MusteriNo_Textfield.getText();
        if (dt.Sayi_Mi(MusteriNo) && !MusteriNo.equals("")) {
            MusteriNoSorgu(MusteriNo);
        } else {
            JOptionPane.showMessageDialog(null, "Lütfen geçerli değerler girin");
        }

    }//GEN-LAST:event_NoSorgu_ButtonActionPerformed

    private void KartKayırSayfasi_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KartKayırSayfasi_jButtonActionPerformed

        int SecilenMusteri = KatrOnayBekleyen_Table.getSelectedRow();
        try {
            String MusteriId = MusteriSorguList.get(SecilenMusteri).getMusteri_Id();
            PersonelKartKayıt_Frame pkf = new PersonelKartKayıt_Frame(PersonelId, PersonelIsım, PersonelSoyisim, MusteriId);
            setVisible(false);
            pkf.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Lütfen bir müşteri bilgisini seçin");
        }


    }//GEN-LAST:event_KartKayırSayfasi_jButtonActionPerformed

    private void AnaSayfa_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnaSayfa_jMenuItemActionPerformed

        PersonelAnaSayfa_Frame paf = new PersonelAnaSayfa_Frame(PersonelId, PersonelIsım, PersonelSoyisim);
        setVisible(false);
        paf.setVisible(true);

    }//GEN-LAST:event_AnaSayfa_jMenuItemActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed

    }//GEN-LAST:event_jMenu1ActionPerformed

    //MÜŞTERİ ID SORGUSU YAPILIYOR---------------------------------------------------------------------------
    public void MusteriIdSorgu(String MusteriId) {

        MusteriBeans mb;
        String query, Musteri_Id, Musteri_Isim, Musteri_SoyIsim, Musteri_Cinsiyet, Musteri_Telefon, Musteri_Mail,
                Musteri_Adres, Musteri_Dogum_Tarih, Musteri_Kayıt_Tarih, Musteri_Fis_No;
        try {
            Statement st = con.createStatement();
            query = "select * from Musteri_Table Where Musteri_Id =" + MusteriId;
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                Musteri_Id = rs.getString("Musteri_Id");
                Musteri_Isim = rs.getString("Musteri_Isim");
                Musteri_SoyIsim = rs.getString("Musteri_SoyIsim");
                Musteri_Cinsiyet = rs.getString("Musteri_Cinsiyet");
                Musteri_Telefon = rs.getString("Musteri_Telefon");
                Musteri_Mail = rs.getString("Musteri_Mail");
                Musteri_Adres = rs.getString("Musteri_Adres");
                Musteri_Dogum_Tarih = rs.getString("Musteri_Dogum_Tarih");
                Musteri_Kayıt_Tarih = rs.getString("Musteri_Kayıt_Tarih");

                mb = new MusteriBeans(Musteri_Id, Musteri_Isim, Musteri_SoyIsim, Musteri_Cinsiyet, Musteri_Telefon,
                        Musteri_Mail, Musteri_Adres, Musteri_Dogum_Tarih, Musteri_Kayıt_Tarih);
                MusteriSorguList.add(mb);
            }

            MusteriListele();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Bu Id değerine sahip müşteri bilgisi bulunamadı");
        }
        Temizle();
    }

    //MÜŞTERİ NUMARA SORGUSU YAPILIYOR---------------------------------------------------------------------------
    public void MusteriNoSorgu(String MusteriNo) {

        MusteriBeans mb;
        String query, Musteri_Id, Musteri_Isim, Musteri_SoyIsim, Musteri_Cinsiyet, Musteri_Telefon, Musteri_Mail,
                Musteri_Adres, Musteri_Dogum_Tarih, Musteri_Kayıt_Tarih, Musteri_Fis_No;
        try {
            Statement st = con.createStatement();
            query = "select * from Musteri_Table Where Musteri_Telefon LIKE '%" + MusteriNo + "'";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                Musteri_Id = rs.getString("Musteri_Id");
                Musteri_Isim = rs.getString("Musteri_Isim");
                Musteri_SoyIsim = rs.getString("Musteri_SoyIsim");
                Musteri_Cinsiyet = rs.getString("Musteri_Cinsiyet");
                Musteri_Telefon = rs.getString("Musteri_Telefon");
                Musteri_Mail = rs.getString("Musteri_Mail");
                Musteri_Adres = rs.getString("Musteri_Adres");
                Musteri_Dogum_Tarih = rs.getString("Musteri_Dogum_Tarih");
                Musteri_Kayıt_Tarih = rs.getString("Musteri_Kayıt_Tarih");

                mb = new MusteriBeans(Musteri_Id, Musteri_Isim, Musteri_SoyIsim, Musteri_Cinsiyet, Musteri_Telefon,
                        Musteri_Mail, Musteri_Adres, Musteri_Dogum_Tarih, Musteri_Kayıt_Tarih);
                MusteriSorguList.add(mb);
            }

            MusteriListele();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Bu numara değerine sahip müşteri bilgisi bulunamadı");
        }
        Temizle();
    }

    //TABLO VE ARRAYLİST İŞLEMLERİ VAR ------------------------------------------------------------------------------
    public void MusteriListele() {

        DefaultTableModel model = (DefaultTableModel) KatrOnayBekleyen_Table.getModel();
        Object[] row = new Object[5];
        for (int i = 0; i < MusteriSorguList.size(); i++) {
            row[0] = MusteriSorguList.get(i).getMusteri_Id();
            row[1] = MusteriSorguList.get(i).getMusteri_Isim();
            row[2] = MusteriSorguList.get(i).getMusteri_SoyIsim();
            row[3] = MusteriSorguList.get(i).getMusteri_Telefon();

            model.addRow(row);
        }
    }
    //yielemeleri önlemek için tabloyu da listeyi de temizlemem gerekiyordu

    public void TableTemizle() {

        DefaultTableModel model = (DefaultTableModel) KatrOnayBekleyen_Table.getModel();
        //Arraylist içerisindeki değerleri bir sonraki arama için temizliyorum
        MusteriSorguList.clear();
        //tablodaki değerleir temizliyorum
        model.setRowCount(0);

    }

    public void Temizle() {
        MusteriNo_Textfield.setText("");
        MusteriId_Textfield.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonelMusteriKartKayıt_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonelMusteriKartKayıt_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonelMusteriKartKayıt_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonelMusteriKartKayıt_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonelMusteriKartKayıt_Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AnaSayfa_jMenuItem;
    private javax.swing.JButton IdSorgu_Button;
    private javax.swing.JButton KartKayırSayfasi_jButton;
    private javax.swing.JTable KatrOnayBekleyen_Table;
    private javax.swing.JTextField MusteriId_Textfield;
    private javax.swing.JTextField MusteriNo_Textfield;
    private javax.swing.JButton NoSorgu_Button;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
